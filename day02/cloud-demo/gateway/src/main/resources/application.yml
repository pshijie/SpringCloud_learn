server:
  port: 10010  # 网关端口
spring:
  application:
    name: gateway  # 服务名称
  cloud:
    nacos:
      #      server-addr: localhost:8848 # nacos地址(未配置集群和Nginx前)
#      server-addr: localhost:80 # nacos地址(即在Nginx中配置的代理地址)
      server-addr: nacos:80 # nacos地址(在Docker中进行部署)
    gateway:
      routes: # 网关路由配置
        - id: user-service  # 路由id，自定义，唯一即可
          # uri: http://127.0.0.1:8081 # 可使用固定地址作为路由的目标地址
          uri: lb://userservice # 可使用服务名称作为路由的目标地址，其中lb即负载均衡
          predicates: # 路由断言，即判断请求是否符合路由规则的条件
            - Path=/user/**  # 按照路径匹配，只要以/user/开头就符合要求
        - id: order-service
          uri: lb://orderservice
          predicates:
            - Path=/order/**
           # 给所有进入userservice的请求添加请求头
#          filters: # 针对某个服务请求的过滤器
#            - AddRequestHeader=test filter1! # 添加请求头
      default-filters: # 默认过滤器，会对所有的路由请求都生效
        - AddRequestHeader=test filter2!

      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true  # 解决options请求被拦截间题
        corsConfigurations:
          '[/**]':
            al1owed0rigins: #允许哪些网站的跨域请求
              - "http://localhost:8090"
            allowedMethods: #允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*"  # 允许在请求中携带的头信息
            allowCredentials: true  # 是否允许携带cookie
            maxAge: 360000  # 这次跨域检测的有效期
